snippet snips "all snippets"
/*
   snips
   cpd
   minimal
   for
   vect
   all
   readvec
   sort
   pb
   gcd 
   binpow
 */
endsnippet

snippet cpd "default cp program"
#include<bits/stdc++.h>
#define ll long long
using namespace std;

void solve(){
    $0
}

int32_t main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int t;
    cin >> t;
    while(t--){
        solve();
    }
}
endsnippet

snippet minimal "minimalist begin"
#include <bits/stdc++.h>
#define ll long long
using namespace std;

int32_t main() {
    $0
}
endsnippet

snippet for "for"
for (int ${1:i} = 0; $1 < ${2:n}; ++$1) {
    $0
}
endsnippet

snippet vect "vector"
vector<${1:int}> ${2:arr};$0
endsnippet

snippet all "all"
${1:arr}.begin(), $1.end()$0
endsnippet

snippet readvec "read vector"
vector<${1:int}> ${2:arr}(${3:n});
for ($1 &val : $2) {
    cin >> val;
}
$0
endsnippet

snippet sort "read vector"
sort(${1:arr}.begin(), $1.end());$0
endsnippet

snippet pb "push_back"
push_back($1);$0
endsnippet

snippet gcd "gcd"
template<typename T>
T gcd(T a, T b) {
    while (a) {
        b %= a;
        swap(a, b);
    }
    return b;
}
endsnippet

snippet binpow "binpow"
template<typename T>
T binpow(T a, T b) {
    T ans = 1;
    while (b) {
        if (b & 1) {
            ans = 1LL * ans * a % MOD;
        }
        a = 1LL * a * a % MOD;
        b >>= 1;
    }
    return ans;
}
endsnippet
